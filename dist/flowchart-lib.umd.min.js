/*! FlowchartLib v1.0.0 | MIT License */
/*!
 * FlowchartLib v1.0.0
 * (c) 2025
 * @license MIT
 */
!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():t.FlowchartLib=e()}("undefined"!=typeof self?self:this,function(){"use strict";class Node{constructor(t,e,i,s,n=""){this.id=t,this.type=e,this.x=i,this.y=s,this.text=n,this.width=120,this.height=60,this.selected=!1}containsPoint(t,e){return t>=this.x-this.width/2&&t<=this.x+this.width/2&&e>=this.y-this.height/2&&e<=this.y+this.height/2}isOnConnectionPoint(t,e){const i=this.getConnectionPoints();for(let s of i)if(Math.sqrt((t-s.x)**2+(e-s.y)**2)<10)return s;return null}isOnResizeHandle(t,e){const i=this.getResizeHandles();for(let s of i)if(Math.sqrt((t-s.x)**2+(e-s.y)**2)<8)return s;return null}getConnectionPoints(){return[{x:this.x,y:this.y-this.height/2,position:"top"},{x:this.x+this.width/2,y:this.y,position:"right"},{x:this.x,y:this.y+this.height/2,position:"bottom"},{x:this.x-this.width/2,y:this.y,position:"left"}]}getClosestConnectionPoint(t,e){const i=this.getConnectionPoints();let s=i[0],n=1/0;for(let o of i){const i=Math.sqrt((t-o.x)**2+(e-o.y)**2);i<n&&(n=i,s=o)}return s}getResizeHandles(){const t=this.x-this.width/2,e=this.x+this.width/2,i=this.y-this.height/2,s=this.y+this.height/2;return[{x:t,y:i,position:"top-left"},{x:e,y:i,position:"top-right"},{x:e,y:s,position:"bottom-right"},{x:t,y:s,position:"bottom-left"}]}draw(t,e=!1){switch(t.save(),t.fillStyle=this.getFillColor(),t.strokeStyle=e?"#2196F3":"#333",t.lineWidth=e?3:2,this.type){case"start":case"end":this.drawRounded(t);break;case"process":default:this.drawRectangle(t);break;case"decision":this.drawDiamond(t)}this.drawText(t),this.drawConnectionPoints(t),e&&(this.drawSelectionOutline(t),this.drawResizeHandles(t)),t.restore()}drawRounded(t){const e=this.x-this.width/2,i=this.y-this.height/2,s=this.height/2;t.beginPath(),t.moveTo(e+s,i),t.lineTo(e+this.width-s,i),t.arcTo(e+this.width,i,e+this.width,i+s,s),t.lineTo(e+this.width,i+this.height-s),t.arcTo(e+this.width,i+this.height,e+this.width-s,i+this.height,s),t.lineTo(e+s,i+this.height),t.arcTo(e,i+this.height,e,i+this.height-s,s),t.lineTo(e,i+s),t.arcTo(e,i,e+s,i,s),t.closePath(),t.fill(),t.stroke()}drawRectangle(t){const e=this.x-this.width/2,i=this.y-this.height/2;t.fillRect(e,i,this.width,this.height),t.strokeRect(e,i,this.width,this.height)}drawDiamond(t){t.beginPath(),t.moveTo(this.x,this.y-this.height/2),t.lineTo(this.x+this.width/2,this.y),t.lineTo(this.x,this.y+this.height/2),t.lineTo(this.x-this.width/2,this.y),t.closePath(),t.fill(),t.stroke()}drawText(t){t.fillStyle="#000",t.font="14px Arial",t.textAlign="center",t.textBaseline="middle",t.fillText(this.text,this.x,this.y)}drawConnectionPoints(t){const e=this.getConnectionPoints();for(let i of e)t.fillStyle="#000",t.strokeStyle="#fff",t.lineWidth=2,t.beginPath(),t.arc(i.x,i.y,8,0,2*Math.PI),t.fill(),t.stroke(),t.strokeStyle="#fff",t.lineWidth=2,t.lineCap="round",t.beginPath(),t.moveTo(i.x-4,i.y),t.lineTo(i.x+4,i.y),t.stroke(),t.beginPath(),t.moveTo(i.x,i.y-4),t.lineTo(i.x,i.y+4),t.stroke()}drawSelectionOutline(t){switch(t.strokeStyle="#2196F3",t.lineWidth=3,t.setLineDash([5,5]),this.type){case"start":case"end":this.drawRoundedSelectionOutline(t);break;case"decision":this.drawDiamondSelectionOutline(t);break;default:this.drawRectangleSelectionOutline(t)}t.setLineDash([])}drawRoundedSelectionOutline(t){const e=this.x-this.width/2,i=this.y-this.height/2,s=this.height/2;t.beginPath(),t.moveTo(e+s,i),t.lineTo(e+this.width-s,i),t.arcTo(e+this.width,i,e+this.width,i+s,s),t.lineTo(e+this.width,i+this.height-s),t.arcTo(e+this.width,i+this.height,e+this.width-s,i+this.height,s),t.lineTo(e+s,i+this.height),t.arcTo(e,i+this.height,e,i+this.height-s,s),t.lineTo(e,i+s),t.arcTo(e,i,e+s,i,s),t.closePath(),t.stroke()}drawDiamondSelectionOutline(t){t.beginPath(),t.moveTo(this.x,this.y-this.height/2-5),t.lineTo(this.x+this.width/2+5,this.y),t.lineTo(this.x,this.y+this.height/2+5),t.lineTo(this.x-this.width/2-5,this.y),t.closePath(),t.stroke()}drawRectangleSelectionOutline(t){t.strokeRect(this.x-this.width/2-5,this.y-this.height/2-5,this.width+10,this.height+10)}drawResizeHandles(t){const e=this.getResizeHandles();t.fillStyle="#2196F3",t.strokeStyle="#fff",t.lineWidth=2;for(let i of e)t.fillRect(i.x-4,i.y-4,8,8),t.strokeRect(i.x-4,i.y-4,8,8)}getFillColor(){switch(this.type){case"start":return"#90EE90";case"end":return"#FFB6C1";case"process":return"#87CEEB";case"decision":return"#FFD700";default:return"#FFF"}}}class Connection{constructor(t,e,i,s,n){this.id=t,this.fromNode=e,this.fromPort=i,this.toNode=s,this.toPort=n,this.selected=!1}getPortPosition(t,e){switch(e){case"top":return{x:t.x,y:t.y-t.height/2};case"right":return{x:t.x+t.width/2,y:t.y};case"bottom":return{x:t.x,y:t.y+t.height/2};case"left":return{x:t.x-t.width/2,y:t.y};default:return{x:t.x,y:t.y}}}isNearPoint(t,e,i=15){const s=this.getPortPosition(this.fromNode,this.fromPort),n=this.getPortPosition(this.toNode,this.toPort);if(this.distanceToPoint(t,e,s.x,s.y)<i)return!0;if(this.distanceToPoint(t,e,n.x,n.y)<i)return!0;const o=this.pointToLineDistance(t,e,s.x,s.y,n.x,n.y),h=(s.x+n.x)/2,r=(s.y+n.y)/2;return this.distanceToPoint(t,e,h,r)<2*i||o<i}distanceToPoint(t,e,i,s){return Math.sqrt((i-t)**2+(s-e)**2)}pointToLineDistance(t,e,i,s,n,o){const h=n-i,r=o-s,d=h*h+r*r;if(0===d)return Math.sqrt((t-i)*(t-i)+(e-s)*(e-s));let c=((t-i)*h+(e-s)*r)/d;c=Math.max(0,Math.min(1,c));const a=i+c*h,l=s+c*r;return Math.sqrt((t-a)*(t-a)+(e-l)*(e-l))}draw(t,e=!1){t.save();const i=this.getPortPosition(this.fromNode,this.fromPort),s=this.getPortPosition(this.toNode,this.toPort);t.strokeStyle="#000",t.lineWidth=e?3:2,t.setLineDash([]),this.drawConnectionLine(t,i,s),t.restore()}drawConnectionLine(t,e,i){const s=this.needsBendingPath(e,i);if(t.beginPath(),t.moveTo(e.x,e.y),s){const s=50,n=this.getControlPoint(e,this.fromPort,s),o=this.getControlPoint(i,this.toPort,s);t.bezierCurveTo(n.x,n.y,o.x,o.y,i.x,i.y)}else t.lineTo(i.x,i.y);t.stroke()}getControlPoint(t,e,i){switch(e){case"right":return{x:t.x+i,y:t.y};case"left":return{x:t.x-i,y:t.y};case"top":return{x:t.x,y:t.y-i};case"bottom":return{x:t.x,y:t.y+i};default:return t}}needsBendingPath(t,e){const i=Math.abs(e.x-t.x),s=Math.abs(e.y-t.y);return i>50||s>50}drawArrowHead(t,e,i){let s=Math.atan2(i.y-e.y,i.x-e.x);switch(this.toPort){case"right":s=0;break;case"left":s=Math.PI;break;case"top":s=-Math.PI/2;break;case"bottom":s=Math.PI/2}t.beginPath(),t.moveTo(i.x,i.y),t.lineTo(i.x-12*Math.cos(s-Math.PI/6),i.y-12*Math.sin(s-Math.PI/6)),t.lineTo(i.x-12*Math.cos(s+Math.PI/6),i.y-12*Math.sin(s+Math.PI/6)),t.closePath(),t.fill()}}return{Canvas:class{constructor(t,e={}){if(this.container=document.getElementById(t),!this.container)throw new Error(`Container element '${t}' not found!`);this.options={mode:e.mode||"edit",width:e.width||null,height:e.height||null,readonly:e.readonly||!1,pixelRatio:e.pixelRatio||window.devicePixelRatio||1},this.nodes=[],this.connections=[],this.nodeIdCounter=0,this.connectionIdCounter=0,this.selectedNode=null,this.selectedConnection=null,this.isDragging=!1,this.dragOffsetX=0,this.dragOffsetY=0,this.isResizing=!1,this.resizeHandle=null,this.resizeStartWidth=0,this.resizeStartHeight=0,this.resizeStartX=0,this.resizeStartY=0,this.resizeStartNodeX=0,this.resizeStartNodeY=0,this.isConnecting=!1,this.connectionStart=null,this.connectionStartPort=null,this.tempConnectionEnd=null,this.isReconnecting=!1,this.reconnectingConnection=null,this.reconnectingEnd=null,this.editingNode=null,this.textInput=null,this.originalNodeText=null,this.history=[],this.historyIndex=-1,this.maxHistorySize=50,this.clipboard=null,this.init(),this.setupResizeObserver(),this.saveState()}init(){this.canvas=document.createElement("canvas"),this.canvas.style.border="1px solid #ccc",this.canvas.style.cursor="default",this.canvas.style.width="100%",this.canvas.style.height="100%",this.canvas.style.display="block",this.ctx=this.canvas.getContext("2d"),this.container.appendChild(this.canvas),this.updateCanvasSize(),this.options.readonly||(this.canvas.addEventListener("mousedown",t=>this.handleMouseDown(t)),this.canvas.addEventListener("mousemove",t=>this.handleMouseMove(t)),this.canvas.addEventListener("mouseup",t=>this.handleMouseUp(t)),this.canvas.addEventListener("dblclick",t=>this.handleDoubleClick(t)),document.addEventListener("keydown",t=>this.handleKeyDown(t))),this.render()}setupResizeObserver(){"undefined"!=typeof ResizeObserver?(this.resizeObserver=new ResizeObserver(()=>{this.updateCanvasSize(),this.render()}),this.resizeObserver.observe(this.container)):window.addEventListener("resize",()=>{this.updateCanvasSize(),this.render()})}updateCanvasSize(){const t=this.container.getBoundingClientRect(),e=this.options.width||t.width,i=this.options.height||t.height,s=this.options.pixelRatio;this.canvas.width=e*s,this.canvas.height=i*s,this.canvas.style.width=e+"px",this.canvas.style.height=i+"px",this.ctx.scale(s,s),this.logicalWidth=e,this.logicalHeight=i}addNode(t,e,i,s){const n="node-"+this.nodeIdCounter++,o=new Node(n,t,i,s,e);return this.nodes.push(o),this.render(),this.saveState(),o}deleteNode(t){this.connections=this.connections.filter(e=>e.fromNode!==t&&e.toNode!==t),this.nodes=this.nodes.filter(e=>e!==t),this.selectedNode=null,this.render(),this.saveState()}addConnection(t,e,i,s){for(let n of this.connections)if(n.fromNode===t&&n.toNode===i&&n.fromPort===e&&n.toPort===s)return null;const n="conn-"+this.connectionIdCounter++,o=new Connection(n,t,e,i,s);return this.connections.push(o),this.render(),this.saveState(),o}deleteConnection(t){this.connections=this.connections.filter(e=>e!==t),this.selectedConnection=null,this.render(),this.saveState()}getConnectionEndpointAt(t,e,i=15){for(let s of this.connections){const n=s.getPortPosition(s.fromNode,s.fromPort),o=s.getPortPosition(s.toNode,s.toPort);if(Math.sqrt((t-n.x)**2+(e-n.y)**2)<i)return{connection:s,endpoint:"start"};if(Math.sqrt((t-o.x)**2+(e-o.y)**2)<i)return{connection:s,endpoint:"end"}}return null}render(){this.ctx.fillStyle="#f9f9f9",this.ctx.fillRect(0,0,this.logicalWidth,this.logicalHeight),this.drawGrid();for(let t of this.connections){const e=t===this.selectedConnection;this.isReconnecting&&t===this.reconnectingConnection||t.draw(this.ctx,e)}this.isReconnecting&&this.reconnectingConnection&&this.tempConnectionEnd&&this.drawReconnectionPreview(),this.isConnecting&&this.connectionStart&&this.tempConnectionEnd&&this.drawConnectionPreview();for(let t of this.nodes){const e=t===this.selectedNode;t.draw(this.ctx,e)}0===this.nodes.length&&(this.ctx.fillStyle="#999",this.ctx.font="16px Arial",this.ctx.textAlign="center",this.ctx.fillText("Click buttons below to add nodes",this.logicalWidth/2,this.logicalHeight/2))}drawGrid(){this.ctx.strokeStyle="#e0e0e0",this.ctx.lineWidth=1;for(let t=0;t<this.logicalWidth;t+=20)this.ctx.beginPath(),this.ctx.moveTo(t,0),this.ctx.lineTo(t,this.logicalHeight),this.ctx.stroke();for(let t=0;t<this.logicalHeight;t+=20)this.ctx.beginPath(),this.ctx.moveTo(0,t),this.ctx.lineTo(this.logicalWidth,t),this.ctx.stroke()}drawReconnectionPreview(){const t=this.reconnectingConnection;let e,i;"start"===this.reconnectingEnd?(e=this.tempConnectionEnd,i=t.getPortPosition(t.toNode,t.toPort)):(e=t.getPortPosition(t.fromNode,t.fromPort),i=this.tempConnectionEnd),this.ctx.strokeStyle="#000",this.ctx.lineWidth=2,this.ctx.setLineDash([]),this.ctx.beginPath(),this.ctx.moveTo(e.x,e.y),this.ctx.lineTo(i.x,i.y),this.ctx.stroke()}drawConnectionPreview(){const t=this.connectionStart.getConnectionPoints().find(t=>t.position===this.connectionStartPort);this.ctx.strokeStyle="#000",this.ctx.lineWidth=2,this.ctx.setLineDash([]),this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(this.tempConnectionEnd.x,this.tempConnectionEnd.y),this.ctx.stroke()}clear(){this.nodes=[],this.connections=[],this.selectedNode=null,this.selectedConnection=null,this.render()}getMousePos(t){const e=this.canvas.getBoundingClientRect(),i=this.logicalWidth/e.width,s=this.logicalHeight/e.height;return{x:(t.clientX-e.left)*i,y:(t.clientY-e.top)*s}}handleMouseDown(t){const e=this.getMousePos(t),i=e.x,s=e.y;if(this.selectedNode){const t=this.selectedNode.isOnResizeHandle(i,s);if(t)return void this.startResizing(t,i,s)}const n=this.getConnectionEndpointAt(i,s);if(n)this.startReconnecting(n,i,s);else{for(let t of this.nodes){const e=t.isOnConnectionPoint(i,s);if(e)return void this.startConnecting(t,e,i,s)}for(let t of this.nodes)if(t.containsPoint(i,s))return void this.startDragging(t,i,s);for(let t of this.connections)if(t.isNearPoint(i,s))return void this.selectConnection(t);this.deselectAll()}}handleMouseMove(t){const e=this.getMousePos(t),i=e.x,s=e.y;if(!this.isResizing)return this.isReconnecting||this.isConnecting?(this.tempConnectionEnd={x:i,y:s},void this.render()):void(this.isDragging&&this.selectedNode?this.updateDrag(i,s):this.updateCursor(i,s));this.updateResize(i,s)}handleMouseUp(t){const e=this.getMousePos(t),i=e.x,s=e.y;this.isResizing?this.finishResizing():this.isReconnecting?this.finishReconnecting(i,s):this.isConnecting?this.finishConnecting(i,s):this.isDragging&&this.finishDragging()}handleDoubleClick(t){const e=this.getMousePos(t),i=e.x,s=e.y;for(let t of this.nodes)if(t.containsPoint(i,s))return void this.startEditingNode(t)}startResizing(t,e,i){this.isResizing=!0,this.resizeHandle=t.position,this.resizeStartWidth=this.selectedNode.width,this.resizeStartHeight=this.selectedNode.height,this.resizeStartX=e,this.resizeStartY=i,this.resizeStartNodeX=this.selectedNode.x,this.resizeStartNodeY=this.selectedNode.y,this.canvas.style.cursor=this.getResizeCursor(t.position)}updateResize(t,e){const i=t-this.resizeStartX,s=e-this.resizeStartY;switch(this.resizeHandle){case"top-left":const t=Math.max(60,this.resizeStartWidth-i),e=Math.max(40,this.resizeStartHeight-s),n=this.resizeStartWidth-t,o=this.resizeStartHeight-e;this.selectedNode.width=t,this.selectedNode.height=e,this.selectedNode.x=this.resizeStartNodeX-n/2,this.selectedNode.y=this.resizeStartNodeY-o/2;break;case"top-right":const h=Math.max(60,this.resizeStartWidth+i),r=Math.max(40,this.resizeStartHeight-s),d=h-this.resizeStartWidth,c=this.resizeStartHeight-r;this.selectedNode.width=h,this.selectedNode.height=r,this.selectedNode.x=this.resizeStartNodeX+d/2,this.selectedNode.y=this.resizeStartNodeY-c/2;break;case"bottom-right":const a=Math.max(60,this.resizeStartWidth+i),l=Math.max(40,this.resizeStartHeight+s),g=a-this.resizeStartWidth,u=l-this.resizeStartHeight;this.selectedNode.width=a,this.selectedNode.height=l,this.selectedNode.x=this.resizeStartNodeX+g/2,this.selectedNode.y=this.resizeStartNodeY+u/2;break;case"bottom-left":const x=Math.max(60,this.resizeStartWidth-i),y=Math.max(40,this.resizeStartHeight+s),f=this.resizeStartWidth-x,p=y-this.resizeStartHeight;this.selectedNode.width=x,this.selectedNode.height=y,this.selectedNode.x=this.resizeStartNodeX-f/2,this.selectedNode.y=this.resizeStartNodeY+p/2}this.render()}finishResizing(){this.isResizing=!1,this.resizeHandle=null,this.canvas.style.cursor="default",this.saveState()}startReconnecting(t,e,i){this.isReconnecting=!0,this.reconnectingConnection=t.connection,this.reconnectingEnd=t.endpoint,this.tempConnectionEnd={x:e,y:i},this.canvas.style.cursor="crosshair",this.selectedConnection=t.connection,this.selectedNode=null,this.render()}finishReconnecting(t,e){for(let i of this.nodes)if(i.containsPoint(t,e)){const s=i.getClosestConnectionPoint(t,e);"start"===this.reconnectingEnd?i!==this.reconnectingConnection.toNode&&(this.reconnectingConnection.fromNode=i,this.reconnectingConnection.fromPort=s.position,this.saveState()):i!==this.reconnectingConnection.fromNode&&(this.reconnectingConnection.toNode=i,this.reconnectingConnection.toPort=s.position,this.saveState());break}this.isReconnecting=!1,this.reconnectingConnection=null,this.reconnectingEnd=null,this.tempConnectionEnd=null,this.canvas.style.cursor="default",this.render()}startConnecting(t,e,i,s){this.isConnecting=!0,this.connectionStart=t,this.connectionStartPort=e.position,this.tempConnectionEnd={x:i,y:s},this.canvas.style.cursor="crosshair"}finishConnecting(t,e){for(let i of this.nodes)if(i!==this.connectionStart&&i.containsPoint(t,e)){const s=i.getClosestConnectionPoint(t,e);this.addConnection(this.connectionStart,this.connectionStartPort,i,s.position);break}this.isConnecting=!1,this.connectionStart=null,this.connectionStartPort=null,this.tempConnectionEnd=null,this.canvas.style.cursor="default",this.render()}startDragging(t,e,i){this.selectedNode=t,this.selectedConnection=null,this.isDragging=!0,this.dragOffsetX=e-t.x,this.dragOffsetY=i-t.y,this.canvas.style.cursor="grabbing",this.render()}updateDrag(t,e){this.selectedNode.x=t-this.dragOffsetX,this.selectedNode.y=e-this.dragOffsetY,this.render()}finishDragging(){this.isDragging=!1,this.canvas.style.cursor="default",this.saveState()}selectConnection(t){this.selectedConnection=t,this.selectedNode=null,this.render()}deselectAll(){this.selectedNode=null,this.selectedConnection=null,this.render()}updateCursor(t,e){if(this.selectedNode){const i=this.selectedNode.isOnResizeHandle(t,e);if(i)return void(this.canvas.style.cursor=this.getResizeCursor(i.position));if(this.selectedNode.isOnConnectionPoint(t,e))return void(this.canvas.style.cursor="pointer")}this.getConnectionEndpointAt(t,e)?this.canvas.style.cursor="pointer":this.isDragging||this.isConnecting||this.isReconnecting||(this.canvas.style.cursor="default")}getResizeCursor(t){switch(t){case"top-left":case"bottom-right":return"nwse-resize";case"top-right":case"bottom-left":return"nesw-resize";default:return"default"}}startEditingNode(t){this.editingNode=t,this.originalNodeText=t.text,t.text="",this.render();const e=this.canvas.getBoundingClientRect(),i=e.width/this.logicalWidth,s=e.height/this.logicalHeight;this.textInput=document.createElement("input"),this.textInput.type="text",this.textInput.value="",this.textInput.style.cssText=`\n      position: absolute;\n      left: ${e.left+(t.x-t.width/2+10)*i}px;\n      top: ${e.top+(t.y-10)*s}px;\n      width: ${(t.width-20)*i}px;\n      height: 20px;\n      font-size: 14px;\n      font-family: Arial;\n      text-align: center;\n      padding: 4px;\n      margin: 0;\n      border: none !important;\n      outline: none !important;\n      background: transparent;\n      background-color: transparent;\n      color: #000;\n      border-radius: 0;\n      box-shadow: none !important;\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      z-index: 1000;\n    `,document.body.appendChild(this.textInput),this.textInput.focus(),this.textInput.addEventListener("blur",()=>this.finishEditingNode()),this.textInput.addEventListener("keydown",t=>{"Enter"===t.key?this.finishEditingNode():"Escape"===t.key&&this.cancelEditingNode()})}finishEditingNode(){this.editingNode&&this.textInput&&(""===this.textInput.value.trim()?this.editingNode.text=this.originalNodeText:this.editingNode.text=this.textInput.value,document.body.removeChild(this.textInput),this.textInput=null,this.editingNode=null,this.originalNodeText=null,this.render(),this.saveState())}cancelEditingNode(){this.textInput&&(this.editingNode&&void 0!==this.originalNodeText&&(this.editingNode.text=this.originalNodeText),document.body.removeChild(this.textInput),this.textInput=null,this.editingNode=null,this.originalNodeText=null,this.render())}handleKeyDown(t){if(this.editingNode)return;const e=navigator.platform.toUpperCase().indexOf("MAC")>=0,i=e?t.metaKey:t.ctrlKey;return i&&"z"===t.key&&!t.shiftKey?(this.undo(),void t.preventDefault()):i&&"z"===t.key&&t.shiftKey||!e&&i&&"y"===t.key?(this.redo(),void t.preventDefault()):i&&"c"===t.key?(this.copySelected(),void t.preventDefault()):i&&"v"===t.key?(this.paste(),void t.preventDefault()):void("Delete"!==t.key&&"Backspace"!==t.key||(this.selectedNode?(this.deleteNode(this.selectedNode),t.preventDefault()):this.selectedConnection&&(this.deleteConnection(this.selectedConnection),t.preventDefault())))}saveState(){this.history=this.history.slice(0,this.historyIndex+1);const t={nodes:this.nodes.map(t=>({id:t.id,type:t.type,x:t.x,y:t.y,text:t.text,width:t.width,height:t.height})),connections:this.connections.map(t=>({id:t.id,fromNodeId:t.fromNode.id,fromPort:t.fromPort,toNodeId:t.toNode.id,toPort:t.toPort}))};this.history.push(t),this.history.length>this.maxHistorySize?this.history.shift():this.historyIndex++}restoreState(t){this.nodes=[],this.connections=[],this.selectedNode=null,this.selectedConnection=null;const e=new Map;t.nodes.forEach(t=>{const i=new Node(t.id,t.type,t.x,t.y,t.text);i.width=t.width,i.height=t.height,this.nodes.push(i),e.set(t.id,i)});const i=Math.max(0,...t.nodes.map(t=>parseInt(t.id.split("-")[1])||0));this.nodeIdCounter=i+1,t.connections.forEach(t=>{const i=e.get(t.fromNodeId),s=e.get(t.toNodeId);if(i&&s){const e=new Connection(t.id,i,t.fromPort,s,t.toPort);this.connections.push(e)}});const s=Math.max(0,...t.connections.map(t=>parseInt(t.id.split("-")[1])||0));this.connectionIdCounter=s+1,this.render()}undo(){this.historyIndex>0&&(this.historyIndex--,this.restoreState(this.history[this.historyIndex]))}redo(){this.historyIndex<this.history.length-1&&(this.historyIndex++,this.restoreState(this.history[this.historyIndex]))}copySelected(){this.selectedNode&&(this.clipboard={type:"node",data:{type:this.selectedNode.type,text:this.selectedNode.text,width:this.selectedNode.width,height:this.selectedNode.height}})}paste(){if(this.clipboard&&"node"===this.clipboard.type){const t=this.clipboard.data,e=this.addNode(t.type,t.text,this.selectedNode?this.selectedNode.x+30:150,this.selectedNode?this.selectedNode.y+30:150);e.width=t.width,e.height=t.height,this.selectedNode=e,this.saveState()}}exportToJSON(){const t={nodes:this.nodes.map(t=>({id:t.id,type:t.type,x:t.x,y:t.y,text:t.text,width:t.width,height:t.height})),connections:this.connections.map(t=>({id:t.id,fromNodeId:t.fromNode.id,fromPort:t.fromPort,toNodeId:t.toNode.id,toPort:t.toPort}))};return JSON.stringify(t,null,2)}importFromJSON(t){const e=JSON.parse(t);this.clear();const i=new Map;e.nodes.forEach(t=>{const e=new Node(t.id,t.type,t.x,t.y,t.text);e.width=t.width,e.height=t.height,this.nodes.push(e),i.set(t.id,e)});const s=Math.max(0,...e.nodes.map(t=>parseInt(t.id.split("-")[1])||0));this.nodeIdCounter=s+1,e.connections.forEach(t=>{const e=i.get(t.fromNodeId),s=i.get(t.toNodeId);if(e&&s){const i=new Connection(t.id,e,t.fromPort,s,t.toPort);this.connections.push(i)}});const n=Math.max(0,...e.connections.map(t=>parseInt(t.id.split("-")[1])||0));this.connectionIdCounter=n+1,this.render()}exportToPNG(){return this.canvas.toDataURL("image/png")}exportToPDF(){if("undefined"==typeof jspdf)throw new Error("jsPDF library is required for PDF export");const t=this.canvas.toDataURL("image/png"),e=new jspdf.jsPDF({orientation:this.canvas.width>this.canvas.height?"landscape":"portrait",unit:"px",format:[this.logicalWidth,this.logicalHeight]});return e.addImage(t,"PNG",0,0,this.logicalWidth,this.logicalHeight),e}destroy(){this.resizeObserver&&this.resizeObserver.disconnect(),this.canvas&&this.canvas.remove()}},Node:Node,Connection:Connection}});